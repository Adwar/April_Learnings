MAVEN


install maven and set the path variables and restart the system

Creating a new maven project

mvn --version

mvn install

mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=arch-demo -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

cd arch-demo

cat pom.xml

mvn validate

build the project

cd arch-demo

mvn package

Unlike the first command executed (archetype:generate) you may notice the second is simply a single word - package. Rather than a goal, this is a phase. A phase is a step in the build lifecycle, which is an ordered sequence of phases. When a phase is given, Maven will execute every phase in the sequence up to and including the one defined. For example, if we execute the compile phase, the phases that actually get executed are:

validate
generate-sources
process-sources
generate-resources
process-resources
compile

You may test the newly compiled and packaged JAR with the following command:

java -cp target/arch-demo-1.0-SNAPSHOT.jar com.mycompany.app.App
Which will print the quintessential:

Hello World!


Running Maven Tools
Maven Phases

Although hardly a comprehensive list, these are the most common default lifecycle phases executed.

validate: validate the project is correct and all necessary information is available
compile: compile the source code of the project
test: test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
package: take the compiled code and package it in its distributable format, such as a JAR.
integration-test: process and deploy the package if necessary into an environment where integration tests can be run
verify: run any checks to verify the package is valid and meets quality criteria
install: install the package into the local repository, for use as a dependency in other projects locally
deploy: done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.
There are two other Maven lifecycles of note beyond the default list above. They are

clean: cleans up artifacts created by prior builds
site: generates site documentation for this project
Phases are actually mapped to underlying goals. The specific goals executed per phase is dependant upon the packaging type of the project. For example, package executes jar:jar if the project type is a JAR, and war:war if the project type is - you guessed it - a WAR.

An interesting thing to note is that phases and goals may be executed in sequence.

mvn clean dependency:copy-dependencies package
This command will clean the project, copy dependencies, and package the project (executing all phases up to package, of course).

Generating the Site

mvn site
This phase generates a site based upon information on the project's pom. You can look at the documentation generated under target/site.


REF LINK : https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html